from pyrogram import Client, filters
from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery

class Bot():
    def __init__(self):
        ###########–Ω–µ —Ç—Ä–æ–≥–∞—Ç—å##########
        self.api_id = 9958356
        self.hash = "8895b2a2b674f00658660440ef8adcbb"
        #############–∑–Ω–∞—á–µ–Ω–∏—è##########
        self.admins = [697798016, 897669172, 689859950]
        self.tovars = {"tovar":{"num":"num", "price":"price"},}
        self.price = []
        ###############################
        self.commands = ["start", "help"]
        self.keyboard = InlineKeyboardMarkup([[InlineKeyboardButton(text="+—Å—É–º–º–∞ –¥–µ—Ç–∞–ª—å–Ω—ñ—à–µ", callback_data="sum")],[InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤", callback_data="products"),InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤", callback_data="users")],[InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥–∞–∂—É –≤ –≥—Ä–Ω –∑–∞ –¥–µ–Ω—å", callback_data='money')],[InlineKeyboardButton(text="–í–∏–¥–∞–ª–∏—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—é –∑–∞—Ä–æ–±—ñ—Ç–∫—É –∑–∞ –¥–µ–Ω—å", callback_data="clear")],[InlineKeyboardButton(text="= –ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞", callback_data="=")],[InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back"), InlineKeyboardButton(text="–ó–∞–≤–µ—Ä—à–∏—Ç–∏ —Ä–æ–±–æ—Ç—É",callback_data="exit")]])
        file = open('users.txt', 'r')
        self.us = set()
        for line in file:
            self.us.add(line.strip())
        file.close()
        ###########bot#################
        self.vet()

    def vet(self):
        self.file_prices = open("prices.txt", 'r')
        self.prices = []
        for price in self.file_prices:
            self.prices.append(price.strip())
        self.file_prices.close()

        bot = Client("BotSession", self.api_id, self.hash)

        bot.start()
        bot.stop()
        print("Bot is Online")

############################ Helps #################################
        @bot.on_message(filters.command(self.commands, prefixes='/') & filters.all)
        def helper(bot, message):
            line = str(message.from_user.id) + ' ' + str(message.from_user.first_name)
            if line not in self.us:
                file = open('users.txt', 'a')
                file.write(str(message.from_user.id) + ' ' + str(message.from_user.first_name) + '\n')
                self.us.add(line)
                file.close()
            bot.send_message(message.chat.id, "–î–æ–±—Ä–æ–≥–æ –¥–Ω—è, —è –†–∞–π–¥—É–∂–Ω–∏–π –Ñ–Ω–æ—Ç\n–ß–∏–º –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏?", reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton(text="/help", callback_data='hel')]]))
            bot.delete_messages(message.chat.id, message.id)

##################### Calculator ###################################
        @bot.on_message(filters.text & filters.all)
        def cheker(bot, message):
            if message.from_user.id in self.admins:
                try:
                    if message.text == "add":
                        self.admins.append(int(message.text[3:]))
                        bot.send_message(message.chat.id, '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {} –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞'.format(message.text[3:]))
                    elif message.text == "del":
                        self.admins.remove(int(message.texr[3:]))
                        bot.send_message(message.chat.id, "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {} –ª–∏—à–∏–ª—Å—è –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞".format(message.text[3:]))
                    if message.text[0] == "+":
                        if message.text[-1] == '+':
                            num = message.text[1:]
                            num = float(num[:-1])
                            self.price.append(str(num) + " Terminal")
                            bot.send_message(message.chat.id, f"+ {str(num)} –≥—Ä–Ω")
                            self.prices.append(str(num))
                            self.file_prices = open("prices.txt", 'a')
                            self.file_prices.write(str(num) + "\n")
                            self.file_prices.close()
                            file = open("price.txt", 'a')
                            file.write(str(num)+' Terminal\n')
                            file.close()
                        else:
                            num = float(message.text[1:])
                            self.price.append(str(num))
                            bot.send_message(message.chat.id, f"+ {str(num)} –≥—Ä–Ω")
                            self.prices.append(str(num))
                            self.file_prices = open("prices.txt", 'a')
                            self.file_prices.write(str(str(num)) + "\n")
                            self.file_prices.close()
                            self.file_prices.close()
                            file = open("price.txt", 'a')
                            file.write(str(num) + '\n')
                            file.close()
                except ValueError:
                    pass

        @bot.on_callback_query(filters.all)
        def callback(bot, callback_query: CallbackQuery):
            callback = callback_query.data
            if callback == 'hel' or callback == "back":
                bot.answer_callback_query(callback_query.id, text="–î–ª—è –∑–≤–∏—á–∞–π–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –ø–ª–∞–≥—ñ–Ω –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ\n\n—è–∫—â–æ –≤–∏ —î –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –Ω–∞–∂–º—ñ—Ç—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä", show_alert=True)
                bot.edit_message_text(callback_query.message.chat.id,message_id=callback_query.message.id, text="–û–±–µ—Ä—ñ—Ç—å —Ö—Ç–æ –≤–∏", reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton(text="–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á", callback_data='user'), InlineKeyboardButton(text="–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä", callback_data="admin")]]))
            if callback_query.from_user.id in self.admins:
                if callback == 'admin':
                    bot.answer_callback_query(callback_query.id, text="–ö–æ–º–∞–Ω–¥–∏:\n +—Å—É–º–º–∞\n`=` - –∑–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–º–∞\nadd user_id - –¥–∞—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Äa\ndel user_id - –∑–∞–±—Ä–∞—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", show_alert=True)
                    bot.edit_message_text(callback_query.message.chat.id, message_id=callback_query.message.id, text="–û–±–µ—Ä—ñ—Ç—å —Ç–µ —â–æ –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ", reply_markup=self.keyboard)
                if callback == "sum":
                    bot.answer_callback_query(callback_query.id,text="–î–ª—è —Ç–æ–≥–æ —â–æ–± –≤–Ω–æ—Å–∏—Ç–∏ –≥—Ä–æ—â—ñ –¥–æ –Ω–æ—Ç–∞—Ç–∫–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç–∏ + —Å—É–º–∞ –Ω–∞–ø—Ä–∏–∫–ª–∞–¥\n+123\n\n—è–∫—â–æ –ø–æ —Ç–µ—Ä–º—ñ–Ω–∞–ª—É –≤ –∫—ñ–Ω—Ü—ñ –æ–±–æ–≤'—è–∑–∫–æ–≤–æ  +\n+1823+\n\n–Ø–∫—â–æ –∫–æ–ø—ñ–π–∫–∏\n+194.13  - –æ–±–æ–≤—å—è–∑–∫–æ–≤–æ –∫—Ä–∞–ø–∫–∞",show_alert=True)
                elif callback == 'products':
                    self.tovars_text = ''
                    file = open('tovar.txt', 'r', encoding = "utf-8")
                    tovaru = []
                    for tov in file:
                        tovaru.append(tov)
                        stroka = tov.replace("\n", " ")
                        arr = stroka.split(" ")
                        self.tovars[arr[0]] = {"price": arr[1], "num": float(arr[2])}
                    file.close()
                    for line in tovaru:
                        self.tovars_text = self.tovars_text + line
                    bot.send_message(callback_query.message.chat.id, self.tovars_text)
                elif callback == 'users':
                    text = ''
                    for us in self.us:
                        text = text + us + '\n'
                    bot.send_message(callback_query.message.chat.id, text)
                elif callback == 'money':
                    self.tovars_text = ""
                    file = open('price.txt', 'r')
                    for line in file:
                        self.tovars_text = self.tovars_text + line
                    bot.send_message(callback_query.message.chat.id, self.tovars_text)
                elif callback == "clear":
                    self.prices = []
                    self.price = []
                    file = open('prices.txt', 'w')
                    file.write('')
                    file.close()
                    file = open('price.txt', 'w')
                    file.write('')
                    file.close()
                    bot.send_message(callback_query.message.chat.id, "–ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–¥–∞–∂ –æ—á–∏—â–µ–Ω–∞")
                elif callback == "=":
                    self.sum = 0
                    for num in self.prices:
                        self.sum = self.sum + float(num)
                    bot.send_message(callback_query.message.chat.id, "–æ–±—â–∞—è —Å—É–º–º–∞ : {}".format(self.sum))
                elif callback == "exit":
                    bot.delete_messages(callback_query.message.chat.id, callback_query.message.id)
                    bot.send_message(callback_query.message.chat.id, text="–ì–∞—Ä–Ω–æ–≥–æ –≤–∞–º –¥–Ω—è —Ç–∞ —É—Å–ø—ñ—Ö—É ü¶ù")

        bot.run()

if __name__ == "__main__":
    Bot()
